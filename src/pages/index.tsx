import { SignInButton, useUser } from "@clerk/nextjs";
import type { Post } from "@prisma/client";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { toast } from "react-hot-toast";
import Loading from "~/components/Loading";

import { api } from "~/utils/api";

dayjs.extend(relativeTime);

interface PostProps {
  post: Post;
  author: {
    id: string;
    profileImageUrl: string;
    username: string | null;
  };
}

const Home: NextPage = () => {
  const { data, isLoading } = api.post.getAll.useQuery();
  const [input, setInput] = useState("");
  console.log({ data });
  const { user, isSignedIn } = useUser();

  const ctx = api.useContext();
  const { mutate, isLoading: isPostingLoading } = api.post.create.useMutation({
    onSuccess: async () => {
      setInput("");
      await ctx.post.getAll.invalidate();
    },
    onError: (e) => {
      console.log("hehe", e.data?.zodError);
      const errorMessage = e.data?.zodError?.fieldErrors?.content;
      if (errorMessage && errorMessage[0]) {
        toast.error(errorMessage[0]);
      } else {
        toast.error("Please input from 5 letters");
      }
    },
  });

  console.log({ user });

  if (isLoading) return <Loading />;

  if (!data) return <p>Something went wrong</p>;

  const renderPost = (item: PostProps) => {
    const { post, author } = item || {};
    return (
      <div className="flex items-center justify-start gap-3" key={post.id}>
        <Image
          src={author.profileImageUrl}
          alt="user-logo"
          className="h-12 w-12 rounded-full"
          width={48}
          height={48}
        />
        <div>{post.content}</div>
        <div className="font-thin text-slate-300">
          {dayjs(post.createdAt).fromNow()}
        </div>
      </div>
    );
  };

  const renderTweetZone = () => {
    return (
      <div className="flex items-center justify-start gap-3" key={user?.id}>
        <Image
          src={user?.profileImageUrl as string}
          alt="user-logo"
          className="h-12 w-12 rounded-full"
          width={48}
          height={48}
        />
        <input
          type="text"
          placeholder="Let's tweet something"
          className="rounded-sm p-2 outline-none"
          value={input}
          disabled={isLoading}
          onChange={(e) => {
            setInput(e.target.value);
          }}
        />
        {isPostingLoading ? (
          <Loading type="normal" />
        ) : (
          <button
            onClick={() => {
              mutate({ content: input });
            }}
            disabled={input === ""}
            className="bg-gray-300"
          >
            Submit
          </button>
        )}
      </div>
    );
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="rounded border border-slate-400 p-2">
            {isSignedIn ? renderTweetZone() : <SignInButton />}
          </div>
          {data && data.map((item) => renderPost(item))}
        </div>
      </main>
    </>
  );
};

export default Home;
